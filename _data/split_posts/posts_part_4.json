[
  {
    "title": "데이트팝 서버를 이관해보자",
    "link": "https://blog.datepop.co.krhttps://blog.datepop.co.kr/GCP-AWS-migration/",
    "pubDate": "Mon, 08 Apr 2024 00:00:00 +0000",
    "excerpt": "데이트팝 서버 이관기 (GCP to AWS Migration)\n\n안녕하세요. 데이트팝의 개발팀장, 김용범입니다🙇\n무려 몇달전부터 데이트팝 서버는 클라우드 이전 프로젝트에 돌입하고 있었는데요. 기존에 GCP(Google Cloud Platform)을 메인으로 사용하고 있던 서버를 AWS(Amazon Web Service)로 옮기는 과정을 겪고 있습니다. 데이트팝은 이 글을 통해 백엔드 개발자분들이 현업에서 경험해볼 수 있는 서버 이관 과정을 여러분들에게 공유해보고자 합니다.\n\n왜 데이트팝 서버 이관 작업을 시작하게 되었나요?🧐\n\n초창기 데이트팝 서버는 GCP(Google Cloud Platform)으로 시작되었고, 메인 서버로써 GAE(Google App Engine)을 사용하고 있었습니다. 가장 큰 장점은 yaml 파일 배포 한 번으로 인프라를 직접 관리할 필요 없이 트래픽이 많은 웹 애플리케이션을 구축할 수 있다는 것이었습니다. “직접 관리를 안한다”라는 것은 결국 인프라 플랫폼에서 “모든 관리를 해준다”는 것이고, 이런 유연한 관리는 많은 서버 비용과도 직결되는 부분입니다.😇 데이트팝에서는 이런 서버 비용을 절감해보고자! 서버를 AWS(Amazon Web Service)로 옮기기로 결정했고, 현재 수개월간 이관하는 과정을 겪고 있습니다. 물론 비용절감뿐 아니라, AWS가 현업에서도 수요가 큰만큼 좋은 백엔드 개발자분을 모실 수 있는 가능성도 높이고자 하는 바램도 있습니다.\n\n무엇을 진행하고 있나요?\n\n데이트팝 서버는 적지 않은 GCP 서비스를 사용하고 있습니다. 메인 백엔드 애플리케이션인 GAE 외에도 내장 서비스인 Memcache(데이터 캐싱), CronJob(주기적인 데이터 처리), TaskQueue(비동기 큐)를 사용하고 있고, 그외로는 데이터 저장을 위한 CloudSQL, Cloud Storage, DataStore(NDB), BigQuery 등이 있습니다. 서비스마다 호환이 되거나 이관이 가능한 서비스를 찾아야 했고, 각 서비스에 매칭되는 AWS 서비스를 탐색해야하는 과정을 겪었습니다.\n\n  GAE -> ECS\n  Memcache -> 제거\n  CronJob -> EventBridge + Lambda\n  Taskqueue -> SQS + Lambda\n  CloudSQL -> Aurora DB\n  Cloud Storage -> S3\n  DataStore -> DynamoDB\n  BigQuery -> RedShift\n\n\n위 매칭한 서비스들을 토대로 AWS로 서버 이관을 진행한 결과(TO-BE)를 그려보았을 때는 아래와 같습니다.\n\n\n추가적으로 인프라 외에도 애플리케이션 코드 이관하면서 Python 3.11 버전도 업데이트하고, Django에서 DjangoNinja로 Framework 이전 또한 진행 중입니다.🤫\n\n어떻게 진행하고 있나요?\n각 서비스를 AWS로 옮기면서 어떤 작업을 하고, 어떻게 진행하고 있는지 나열해보면 다음과 같습니다.\n\n\n  Python 버전업을 통해 출력, 인코딩, 형 변환, 예외처리, Type Hint 적용 등의 문법적인 오류 정리\n  Memcache 사용을 제거하고 데이터 조회 API를 순수 Django ORM 으로 구현\n  향후 MSA 전환이 최종 목표이고, DjangoRestFramework 의존도를 줄이기 위한 DjangoNinja 1차 탈바꿈\n  CronJob처럼 주기적인 알림을 트리거로 일어나야 하는 작업들 모두 EventBrige 알림 + Lambda 조합으로 전환\n  TaskQueue처럼 서버 내부에서 Background로 돌아가야할 작업들 모두 SQS + Lambda 조합으로 전환\n  애플리케이션 서버 코드 이전 후 특정 엔드포인트 그룹별로 트래픽 이전 테스트\n  CloudStorage와 같은 정적 데이터 저장소는 모두 S3로 이관\n  실시간 서비스 저장소들은 유저 사용성에 큰 영향을 끼칠 수 있으므로 최종 서버 새벽 작업으로 진행\n\n\n어떤 시행착오를 겪고 계신가요?\n초창기 애플리케이션 서버로 동작해오면서 쌓여 있던 레거시 코드 개선과 서비스 운영에서 GAE 의존도가 높아 성능을 대체할 수 있는 방법을 지속적으로 탐색하고 있습니다.\n\n\n  Memcache를 제거하면서 생길 수 있는 속도 이슈\n    \n      캐싱에 의존된 API 코드를 제거하고, Django ORM 쿼리 최적화 및 속도 개선를 진행하고 있습니다.\n      DB I/O 통신이 아닌 데이터 취합 과정에서 asyncio를 적용하여 비동기로 속도 개선도 시도하는 중입니다.\n    \n  \n  GAE TaskQueue를 대체하기 위한 Background worker 서버\n    \n      GAE 서비스로 내장되어 있는 TaskQueue는 비동기 큐를 통해 엔드포인트를 전달하여 배포한 특정 서버를 호출하여 Background 작업을 수행합니다.\n      이 기능을 SQS 비동기 큐와 Lambda 호출 조합으로 대체해보고 있습니다.\n      하지만, SQS + Lambda 조합에서도 HTTP 통신의 서버 호출을 배제할 수는 없기 때문에 더 나아가 producer/consumer 메시지 비동기 방식의 Celery 도입도 시도하는 중입니다.\n    \n  \n  서버 비용을 절감하기 위한 인프라 자원 제한\n    \n      GAE를 사용하면서 매우 유연한 스케일링 설정으로 운영하다보니 서버 비용에 누수가 생겨났습니다.\n      AWS ECS로 이관하게 되면서 현재 데이트팝에 적절한 인프라 자원량을 측정하여 제한된 자원으로 운영해보고 있습니다.\n    \n  \n\n\n이관을 진행하며…\n레거시 개선은 많은 개발자 분들이 꺼려하는 작업이지만, 결국 누군가는 해야할 하나의 과제입니다. 서버 이관 과정을 겪어보며 회사의 많은 비즈니스 로직을 이해할 수 있었고, 시스템이 돌아가는 전체적인 과정을 그림으로 그릴 수 있었습니다.\n백엔드 개발자로써 한 번의 도약을 또 이뤄내고자 하는 마음으로 도전을 할 수 있었고, 많은 시행착오를 겪으며 조금 더 깊은 경험을 해볼 수 있는 과정이라고 생각합니다.😀\n데이트팝 서버는 향후 MSA 전환을 목표로 향하고 있고, 이에 CTO님(능력자👍)과 함께 여러 설계를 고민해보며 나아가고 있습니다. 개발자는 항상 변화를 일궈내야하기 때문에 저는 MSA를 향한 도약을 또 일궈내보며 다음 글로 뵙겠습니다.🙇",
    "tags": [
      "gcp",
      "aws",
      "python-311",
      "djangoninja"
    ],
    "author": "unknown-author",
    "source": "데이트팝 기술블로그"
  },
  {
    "title": "데이트팝 Python 주니어 개발자 인터뷰 후기 1탄",
    "link": "https://blog.datepop.co.krhttps://blog.datepop.co.kr/python-interview-2024-1/",
    "pubDate": "Sun, 03 Mar 2024 00:00:00 +0000",
    "excerpt": "데이트팝 Python 주니어 개발자 인터뷰 후기\n\n안녕하세요. 여러분에게 사랑을 전하는 데이트팝의 CTO, 권재원입니다.\n최근 데이트팝에서 Python 주니어 개발자 채용 과정을 진행하면서 경험한 기술 인터뷰의 후기를 공유하고자 합니다. 이 글이 개발자 취업을 준비하는 주니어 분들께 실질적인 도움이 되기를 바랍니다. 어떤 역량을 갖추어야 하는지, 그리고 데이트팝이 기대하는 Python 주니어 개발자상에 대해 함께 살펴보겠습니다.\n\n아래 인터뷰 질문은 데이트팝에서 채용을 위해 많은 고민을 하고 준비한 질문들입니다. 상업적 이용 이외에 학습을 위해 자유롭게 내용을 참고해주시고 공유해주시면 감사하겠습니다.\n\n데이트팝이 바라본 이상적인 주니어 개발자상\n\n데이트팝에서는 탄탄한 기본기를 갖춘 주니어 개발자를 찾고 있습니다. 기술 인터뷰에서 난이도 높은 질문도 있었지만, 중점을 둔 것은 단순히 정답을 아는지의 여부가 아니었습니다. 그보다는 지금까지 학습한 내용을 바탕으로 문제를 이해하고 논리적으로 사고하는 역량을 중요하게 평가하였습니다. 컴퓨터 공학 전반에 걸친 깊이있는 공부를 한 사람이라면 기술 인터뷰를 무난히 통과할 수 있었을 것입니다.\n\n인터뷰 질문\n\n파이썬의 Garbage Collection과 메모리 관리\n\n파이썬의 가비지 컬렉션 메커니즘과 참조 카운팅(Reference Counting) 방식에 대한 이해도를 평가하기 위한 질문이었습니다. 특히 순환 참조(Circular Reference)로 인한 메모리 누수가 발생하는 원인을 코드 리뷰를 통해 확인하였습니다.\n\n\n  아래 코드를 실행 시키면 출력이 어떻게 될까요? 그 이유도 같이 설명해주세요.\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\nclass A:\n    def __init__(self):\n        pass\n\n    def __del__(self):\n        print(\"deleted\")\n\ndef main():\n    a = A()\n    print(\"end\")\n\nif __name__ == \"__main__\":\n    # 출력이 어떻게 될까요?\n    main()\n\n\n\n  아래 코드를 실행 시키면 출력이 어떻게 될까요? 그 이유도 같이 설명해주세요.\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\nclass A:\n    def __init__(self):\n        pass\n\n    def __del__(self):\n        print(\"delete\")\n\ndef main():\n    a = A()\n    del a\n    print(\"end\")\n\nif __name__ == \"__main__\":\n    # 출력이 어떻게 될까요?\n    main()\n\n\n\n  아래 코드를 실행 시키면 출력이 어떻게 될까요? 해당 코드는 어떤 문제점을 가지고 있을까요? 그 이유도 같이 설명해주세요.\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\nclass A:\n    def __init__(self, name, parent=None):\n        self.name = name\n        self.parent = parent\n        self.children = set()\n\n    def __del__(self):\n        print(\"delete\", self.name)\n\ndef main():\n    a = A(name=1)\n    a.children.add(A(name=2, parent=a))\n    print(\"end\")\n\nif __name__ == \"__main__\":\n    main()\n\n\n\n  아래 코드는 어떤 문제점을 가지고 있을까요? 메모리 누수가 일어난다고 하면 얼마나 일어날까요? 그 이유도 같이 설명해주세요.\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\nclass A:\n    def __init__(self, name, parent=None):\n        self.name = name\n        self.parent = parent\n        self.children = set()\n        self.workload = ' ' * 128 * 1024 * 1024\n\n    def __del__(self):\n        print(\"delete\", self.name)\n\ndef main():\n    for _ in range(10):\n        a = A(name=1)\n        a.children.add(A(name=2, parent=a))\n\n    print(\"end\")\n\n\nif __name__ == \"__main__\":\n    main()\n\n\nDjango Queryset에 대한 이해도\n\nDjango를 사용한 경험이 있는 지원자를 대상으로, Queryset의 Lazy evaluation에 대한 이해를 확인하는 질문을 하였습니다.\n\n\n  Django에서 아래 코드를 실행 시키면 실제 evaluated 되는 시점은 언제인가요?\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\nqueryset = User.objects.filter(id=1234)\n\nnew_queryset = queryset\n\nfor q in queryset:\n    print(q)\n\nfor q in queryset:\n    print(q)\n\n\n\n  아래 코드의 차이점은 무엇일까요? 왜 성능차이가 발생하는 걸까요?\n\n\n1\nqueryset.count() vs len(queryset)\n\n\n알고리즘 라이브코딩 테스트\n\n기초적인 동적 프로그래밍 문제를 통해 알고리즘에 대한 기본기를 확인하였습니다. 알고리즘과 자료구조가 실무에 당장 사용되는 경우는 드물 수 있습니다. 하지만 개발자의 성장을 위해서는 반드시 갖추어야 할 기본 소양이라고 판단합니다.\n\n1\n사람은 한번에 한 칸 혹은 두 칸의 계단을 오를 수 있다. 계단을 오르는데 필요한 비용(cost)이 있다고 가정할 때, 꼭대기까지 오를 수 있는 최소비용을 얼마인가?\n\n\n기술 인터뷰를 마무리하며\n\n이번 채용에는 정말 많은 분들이 지원해 주셨습니다. 많은 지원자분들과 기술 인터뷰를 진행하면서 저 역시 크게 배우고 성장할 수 있었던 소중한 시간이었습니다. 특히 인상 깊었던 점은, 지원자분들 대부분이 자신의 포트폴리오와 그간 공부해온 내용에 대한 피드백을 적극적으로 요청하셨다는 것입니다. 끊임없이 개발 공부를 하고 열정적으로 준비하고 계신 모습을 볼 수 있었고, 더 나은 개발자로 성장하기 위해 끊임없이 노력하시는 자세가 매우 인상적이었습니다.\n다만 한 가지 피드백을 드리자면, 화려한 프로젝트나 최신 기술 트렌드도 중요하지만 그에 앞서 CS 지식이나 알고리즘 등 기본기를 탄탄히 다지는 것이 무엇보다 중요하다는 점입니다. 기초가 단단해야 어떤 기술도 빠르게 습득하고 활용할 수 있기 때문입니다. 비록 모든 분들과 함께 하지는 못했지만, 앞으로도 데이트팝의 성장에 관심을 가져 주시고 응원해 주시면 감사하겠습니다. 다음 기회에 또 뵙기를 기대하겠습니다. 감사합니다.",
    "tags": [
      "python",
      "datepop"
    ],
    "author": "unknown-author",
    "source": "데이트팝 기술블로그"
  },
  {
    "title": "Update 1: 2022 Year in Review",
    "link": "https://www.toddhgardner.com/blog/2022-year-in-review/",
    "pubDate": "2025-01-05 01:41:49 -0500",
    "excerpt": "The first of (hopefully) a new series of video updates about the web, observability, and my businesses. I had to shut down my Revue-based newsletter, which was honestly difficult to keep up with because writing is hard. Video is way more fun!",
    "tags": [],
    "author": "unknown-author",
    "source": "Todd H. Gardner"
  },
  {
    "title": "Apple Power Adapter Hack",
    "link": "https://www.toddhgardner.com/blog/apple-power-adapter-hack/",
    "pubDate": "2025-01-05 01:41:49 -0500",
    "excerpt": "I just purchased a new 2015 Macbook Pro, which is fantastic. The first brand of computer that I've ever purchased more than once. But they have a major flaw: the Power Adapter cords.",
    "tags": [],
    "author": "unknown-author",
    "source": "Todd H. Gardner"
  },
  {
    "title": "Combine Gmail and Google Apps Inboxes",
    "link": "https://www.toddhgardner.com/blog/combine-gmail-google-apps-inbox/",
    "pubDate": "2025-01-05 01:41:49 -0500",
    "excerpt": "I've recently setup a Google Apps account for TrackJS. Right away I missed having all my email in one place--don't make me have two tabs open Google!",
    "tags": [],
    "author": "unknown-author",
    "source": "Todd H. Gardner"
  },
  {
    "title": "Getting Done",
    "link": "https://www.toddhgardner.com/blog/getting-done/",
    "pubDate": "2025-01-05 01:41:49 -0500",
    "excerpt": "Software isn't done. It's never done, but it can be good enough. This blog is good enough, for now. Now I'm moving forward to shipping things that matter.",
    "tags": [],
    "author": "unknown-author",
    "source": "Todd H. Gardner"
  },
  {
    "title": "How to Fix Long Animation Frames (LoAF) and Speed Up Your Website",
    "link": "https://www.toddhgardner.com/blog/how-to-fix-long-animation-frame-loaf/",
    "pubDate": "2025-01-05 01:41:49 -0500",
    "excerpt": "If you’ve noticed your website feeling sluggish or unresponsive—especially during animations—you might be running into Long Animation Frames (LoAFs). LoAFs happen when a browser takes longer than 50 milliseconds to render an animation frame, leading to a janky experience that can frustrate users.",
    "tags": [],
    "author": "unknown-author",
    "source": "Todd H. Gardner"
  },
  {
    "title": "Update 2: NDC London, PubConf, and Request Metrics Analytics",
    "link": "https://www.toddhgardner.com/blog/ndc-london-pubconf-requestmetrics/",
    "pubDate": "2025-01-05 01:41:49 -0500",
    "excerpt": "Recorded live from Speyside Scotland, right after NDC London 2023 and PubConf. Thoughts on the conference, web application security, and then getting back to Request Metrics with more work on the Analytics side of the product.",
    "tags": [],
    "author": "unknown-author",
    "source": "Todd H. Gardner"
  },
  {
    "title": "Pub Productivity and the Surface Pro",
    "link": "https://www.toddhgardner.com/blog/pub-productivity-and-the-surface-pro/",
    "pubDate": "2025-01-05 01:41:49 -0500",
    "excerpt": "I wanted a device for working from the Pub. As a small-business owner, I'm always working: at home, at lunch, at happy-hour. I wanted a device more portable than my workhorse laptop so that I could effortlessly bring it with me, but more functional than my mobile phone.",
    "tags": [],
    "author": "unknown-author",
    "source": "Todd H. Gardner"
  },
  {
    "title": "Crónica del IndieDevDay",
    "link": "https://blog.nekerafa.dev/posts/indie-dev-day-2024/",
    "pubDate": "Mon, 07 Oct 2024 16:09:39 +0000",
    "excerpt": "Para recuperar un poco la rutina, te vengo a hablar de lo que para mi fue el IndieDevDay, además de dejarte una pequeña sorpresa.",
    "tags": [],
    "author": "unknown-author",
    "source": "Unknown Feed Title"
  }
]