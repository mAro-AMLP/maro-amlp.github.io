[
  {
    "title": "A Minimalist Structure for Snakemake",
    "link": "https://yongfu.name/2023/02/15/snakemake/",
    "pubDate": "Wed, 15 Feb 2023 00:00:00 +0000",
    "excerpt": "I have heard of the use of GNU Make for enhancing reproducibility for some time. I did not incorporate Make into my work, however, since a simple build script written in Bash was sufficient. Everything was well in control, and I could structure the workflow to my will.\nIt was not until I started working in a company setting that I found most things out of my control. Decades of conventions have been accumulating and passing on, and personal workflows have to fit into existing ones.",
    "tags": [],
    "author": "unknown-author",
    "source": "Yongfu's Blog"
  },
  {
    "title": "Privacy-friendly alternatives",
    "link": "https://blog.chraebsli.dev/handbooks/privacy-friendly-alternatives/",
    "pubDate": "Sat, 04 Nov 2023 09:38:00 +0100",
    "excerpt": "Here you can find a list of privacy friendly alternatives to the usual services.\n\nMy recommendations\n\nThese are the services I use myself:\n\n\n  \n    \n      Category\n      Service\n    \n  \n  \n    \n      E-Mail\n      ProtonMail\n    \n    \n      Search Engine\n      Brave Search\n    \n    \n      Cloud Drive\n      pCloud\n    \n    \n      Password Manager\n      Vaultwarden (selfhosted)\n    \n    \n      VPN\n      ProtonVPN\n    \n    \n      Browser\n      Brave\n    \n    \n      OS\n      Manjaro\n    \n  \n\n\nServices\n\nThese services offer different alternatives to the usual services:\n\n\n  Proton\n  Disroot\n  Framasoft\n  De-google-ify Internet\n  Framasoft Alternatives\n\n\nCategories\n\nHere you can find a list of privacy friendly alternatives to the usual services.\n\nCalendar\n\nAlternatives to Google Calendar, Outlook Calendar, etc.\n\n\n  ProtonCalendar\n  Framagenda\n\n\nCloud Drive\n\nAlternatives to Dropbox, Google Drive, OneDrive, iCloud, etc.\n\n\n  pCloud\n  ProtonDrive\n  Disroot Cloud (hosted Nextcloud)\n  Nextcloud\n\n\nDate Finder\n\nAlternatives to Doodle, etc.\n\n\n  Framadate\n\n\nDocuments\n\nAlternatives to Google Docs, Microsoft Office, etc.\n\n\n  Etherpad\n  Disroot Pad\n  Disroot CryptPad\n  CryptPad\n  Framapad\n  Framacalc\n\n\nE-Mail\n\nAlternatives to Gmail, Outlook, etc.\n\n\n  ProtonMail\n  Disroot Webmail\n\n\nForms\n\nAlternatives to Google Forms, Microsoft Forms, etc.\n\n\n  Framaforms\n\n\nMaps\n\nAlternatives to Google Maps, Apple Maps, etc.\n\n\n  Framacarte\n\n\nPaste Bin\n\nDienst um Text zu teilen.\n\n\n  PrivateBin\n  Disroot Bin\n\n\nSearch Engines\n\nAlternatives to Google Search, Bing, etc.\n\n\n  Brave Search\n  DuckDuckGo\n  Qwant\n  Startpage\n\n\nVideo Conferences\n\nAlternatives to Zoom, Google Meet, Microsoft Teams, etc.\n\n\n  Jitsi Meet\n  Disroot Calls\n\n\nVideo Sharing\n\nAlternatives to YouTube, Vimeo, etc.\n\n\n  SepiaSearch",
    "tags": [
      "privacy",
      "software",
      "handbooks"
    ],
    "author": "unknown-author",
    "source": "Coding Crab Blog"
  },
  {
    "title": "Matrix Setup",
    "link": "https://blog.chraebsli.dev/guides/privacy/matrix-setup/",
    "pubDate": "Fri, 03 Nov 2023 09:54:00 +0100",
    "excerpt": "Hier findest du eine kurze Anleitung, wie du dich bei Matrix registrieren und die App einrichten kannst, inkl. anderer Dienste, um deine Sicherheit und Anonymität zu erhöhen.\n\nSchritt 1: Erstelle einen E-Mail Account\n\nAls Erstes solltest du eine sichere und anonyme E-Mail Adresse verwenden. Empfehlung: Protonmail.\n\nErstelle dort ein kostenloses Konto und beachte, dass du einen Benutzernamen wählst, der nicht auf dich zurückzuführen ist. Verwende zudem ein sicheres Passwort. (Du musst es dir nicht merken, da du es später in deinem Passwortmanager speichern kannst. Schreibe es dir jedoch bis dahin auf.)\n\nEin sicheres Passwort sieht so aus (generiert mit Bitwarden): *Ngd863U&USX9$q&Du6!\n\n\n  Mindestens 16 Zeichen (optimal 20+)\n  Gross- und Kleinbuchstaben\n  Zahlen\n  Sonderzeichen\n  (optimal per Zufall generiert und nicht wiederverwendet)\n\n\nSchritt 2: Erstelle einen Bitwarden Account\n\nAls Nächstes solltest du einen Passwortmanager verwenden. Empfehlung: Bitwarden.\n\nErstelle auf Bitwarden ein kostenloses Konto. Nimm als E-Mail Adresse diejenige, die du in Schritt 1 erstellt hast. Verwende zudem ein sicheres Passwort. (Dieses musst du dir merken. Beachte jedoch dass mit diesem Passwort auf alle deine anderen Passwörter zugegriffen werden kann.)\n\nSpeichere zudem das Passwort, das du in Schritt 1 erstellt hast, in Bitwarden.\n\nHilfestellungen zu Bitwarden findest du im Hilfezentrum von Bitwarden.\n\nSchritt 3: Erstelle einen Matrix Account\n\nAls Letztes solltest du einen Matrix Account erstellen. Empfehlung: Element.\n\nErstelle über diesen Link ein Matrix Konto. Verwende als E-Mail Adresse diejenige, die du in Schritt 1 erstellt hast und einen Benutzernamen, der nicht auf dich zurückzuführen ist. Verwende zudem ein sicheres Passwort. (Du musst es dir nicht merken, da du es in deinem Passwortmanager speichern kannst.)\n\nNun kannst du anderen Personen auf Element schreiben. Du kannst diese über ihren Benutzernamen finden. (z.B. @user:matrix.org).\n\nHilfestellungen zu Element findest du im Hilfezentrum von Element.\n\nSchritt 4: Nutze ein VPN (optional)\n\nWenn du deine Anonymität erhöhen möchtest, kannst du ein VPN verwenden. Empfehlung: ProtonVPN.",
    "tags": [
      "privacy",
      "guidesprivacy"
    ],
    "author": "unknown-author",
    "source": "Coding Crab Blog"
  },
  {
    "title": "How to join the Fediverse",
    "link": "https://blog.chraebsli.dev/guides/privacy/how-to-join-the-fediverse/",
    "pubDate": "Thu, 02 Nov 2023 14:15:00 +0100",
    "excerpt": "Learn how you can join the Fediverse.\n\nHow the Fediverse works\n\nThe Fediverse is a collection of different social networks that are all compatible with each other. This means that you can follow someone on one social network, and they can follow you back on a different social network. This is possible because all the social networks in the Fediverse use the same protocol, ActivityPub.\n\nOn the Fediverse, you can find other people not only by their username but also by their server, since it’s possible that another person can have the same username on a different instance. For example, if you want to follow me on Mastodon (Instance: techhub.social), you can find me by my username @chraebsli@techhub.social; technically the pattern @username@domain.tld or username@sub.domain.tld. There is one exception: Matrix. On Matrix, it follows the pattern @username:domain.tld. For example, if you aim to follow me on Matrix (Domain: matrix.org), you can find me by my username @chraebsli:matrix.org.\n\nWhy should you join the Fediverse?\n\nCurrently, conventional Social Media like Instagram, Facebook, Twitter, Reddit, … are based on a centralized model. This means that all the data is stored on a single server and the company that owns the server has full control over the data. This is a problem because the company can do whatever they want with your data, like use it for advertisements or sell the data.\n\nThe Fediverse is based on a decentralized model. This means that the data is stored on many servers and no single entity has full control over the data. This means that you can choose a server that you trust, and you can be sure that your data is safe. You can also pick a server that is located in your country so that you are protected by your country’s laws. Furthermore, you can set up your server with your own rules.\n\nHow you can join the Fediverse\n\nTo join the Fediverse, you need to first select a social network. Here are some of the most popular social networks in the Fediverse:\n\n\n  \n    \n      Category        \n      Original Platform\n      Fedi Alternative                    \n    \n  \n  \n    \n      Microblogging  \n      Twitter          \n      Mastodon\n    \n    \n                     \n                       \n      Misskey  \n    \n    \n      Link Aggregator\n      Reddit            \n      Lemmy      \n    \n    \n                     \n                       \n      Kbin          \n    \n    \n      Video          \n      YouTube          \n      PeerTube\n    \n    \n      Photo          \n      Instagram        \n      Pixelfed  \n    \n    \n      Chat            \n      Discord          \n      Matrix        \n    \n    \n      Calls          \n      Zoom              \n      Jitsi          \n    \n  \n\n\nAfter you have selected a social network, you have to find an instance of that social network, since it’s a decentralized network and there are multiple (different) instances per platform. These instances are often for a specific group of people or have different interests & rules.\n\nYou can find instances on fedidb.org, a web application with stats about the Fediverse. If you want to find an instance for a specific social network, you can use the following links:\n\n\n  Mastodon\n  Misskey\n  Lemmy\n  Kbin\n  PeerTube\n  Pixelfed\n  Matrix\n\n\nSome terms you should know\n\n\n  Fedi: Short for Fediverse\n  Fediverse: A collection of different social networks that are all compatible with each other\n  ActivityPub: The protocol that defines how all social networks in the fediverse communicate with each other\n  Instance: A server that runs a specific social network. For example, techhub.social is an instance of Mastodon\n  Decentralization: The data is stored on many servers and no single entity has full control over the data\n  FOSS: Free and Open Source Software (Software that is free to use, and the source code is available for everyone)",
    "tags": [
      "privacy",
      "fediverse",
      "guidesprivacy"
    ],
    "author": "unknown-author",
    "source": "Coding Crab Blog"
  },
  {
    "title": "How I plan my smart home",
    "link": "https://blog.chraebsli.dev/opinions/how-i-plan-my-smart-home/",
    "pubDate": "Mon, 25 Sep 2023 11:43:00 +0200",
    "excerpt": "How I plan my smart home\n\nIntroduction\n\nIt begins with a simple question: “What do I want to do?”.\n\nCurrently, we have some Shelly bulbs, a Google Nest Mini, and two Google Nest Hubs at home, all connected to the Google Home app. But to automate some things, this is not enough, and you need some better tools. Since I’m a huge fan of FOSS and self-hosting, I did some research.\n\nWhy self-hosting?\n\nCurrently, all your data is everywhere in the world. You have no control over it, and you don’t know what happens to it. Let me give you a few examples: Google, Facebook, Amazon, Apple, Microsoft, etc. all have your data, and you don’t know what they do with it. They can sell it to other companies, use it for their purposes, or even give it to the government. Besides that, all other ‘free’ services you use. Free mostly means that you are the product. They use your data to make money.\n\nSelf-hosting means that you have full control over your data. You can decide what happens to it, and you can even encrypt it. With self-hosting, you will probably come across  FOSS, which stands for Free and Open Source Software. In the next section, I will explain what FOSS is and why it’s free, but you’re not the product.\n\nBut self-hosting is not for everyone. You need to have some knowledge about computers and networking. You need to know how to set up a server, how to secure it, and how to maintain it. But if you are willing to learn, you can do it.\n\nWhat is FOSS?\n\nFOSS, or Free and Open Source Software, stands for software that is free, and you can look at the code. Free means that you have the freedom to use it, study it, change it, and share it. You can use it for any purpose; you can study how it works, you can change it to make it do what you want, and you can share it with others. This is the reason FOSS is so great. You can do whatever you want with it.\n\nIf you use FOSS software, you can be almost certain, that it won’t track you and collect your data since there are many people who understand the code and can see what it does. And if you don’t like something, you can change it.\n\nCloud or self-hosted?\n\nThe first question was whether I should self-host everything and have some servers at home, or if I should use a cloud service like a VPS. Here is a comparison I made:\n\n\n  \n    \n      Category\n      Cloud\n      Virtual\n      Bare\n    \n  \n  \n    \n      Cost\n      ++\n      +\n      -\n    \n    \n      Security\n      ++\n      +\n      +\n    \n    \n      Privacy\n      -\n      +\n      +\n    \n    \n      Reliability\n      ++\n      +\n      -\n    \n    \n      Backups\n      ++\n      +\n      -\n    \n    \n      Control\n      -\n      +\n      ++\n    \n    \n      Complexity\n      -\n      ++\n      +\n    \n  \n\n\nConclusion: Cloud is more secure, reliable, and easier to use, but you have to pay for it and don’t have full control over your data. With virtual servers at home, you have to do everything yourself, but you have full control over your data, which is more complex. Bare-metal servers are the other self-hosting option, but they are not the best option if something goes wrong.\n\nWhat can be self-hosted?\n\nThere are plenty of options for self-hosting, but I will only list the ones I use or plan to use in the future.\n\n\n  Password manager: Bitwarden or Vaultwarden\n  Home automation: Home Assistant\n  File Sharing: Nextcloud\n  Media Server: Jellyfin\n  Mastodon: Mastodon\n  Pixelfed: Pixelfed\n\n\nHere are some more I would like to use:\n\n\n  VPN: ???\n  Backup Server: ???\n  Blogging Platform: ???\n  Email: ???\n  Calendar: ???\n  Communication: ???\n  Web Server: ???\n  Recipe Manager: ???\n\n\nHow I will continue\n\nThe first thing I will do is decide if I want to have some servers at home or use a VPS. But no matter what I choose, I’ll have to set up Home Assistant at home since if something happens or the internet goes down, I still want to be able to control my smart home (or just prevent a disaster). All other services can be set up on a VPS, since it wouldn’t be too bad if I couldn’t access them for a moment.\n\nThe next thing after setting up Home Assistant will be Bitwarden, followed by Nextcloud and Jellyfin. After that, I will set up Mastodon and Pixelfed.",
    "tags": [
      "selfhosting",
      "foss",
      "opinions"
    ],
    "author": "unknown-author",
    "source": "Coding Crab Blog"
  },
  {
    "title": "Google Drive vs OneDrive",
    "link": "https://blog.chraebsli.dev/comparisons/google-drive-vs-onedrive/",
    "pubDate": "Mon, 10 Apr 2023 17:15:00 +0200",
    "excerpt": "In this article, we compare Google Drive and OneDrive and show the differences and similarities.\n\nGoogle Drive\n\nGoogle Drive is a cloud storage service from Google. Anyone with a Google account can use Google Drive for free. With an account, you can buy more storage space and use it.\n\nGoogle Drive is web-based, and you can access it with all modern browsers. There is also a desktop version for Windows and Mac. With the desktop version, you can only synchronize files.\n\nThe other Google products (Docs, Sheets, Slides, Calendar) are only web-based for desktop. For mobile devices (Android, iOS) there are apps. These products are all free and can be used with a Google account.\n\nAdvantages of Google Drive\n\n\n  Share storage space with up to 5 people\n  easy collaboration with others\n  Integration in Google Docs, Sheets, Slides, Gmail, Calendar\n  Everyone with a Google account can work on documents (without subscription)\n\n\nDisadvantages of Google Drive\n\n\n  only web based\n\n\nOneDrive\n\nOneDrive is a cloud storage service from Microsoft and is installed by default on Windows systems. OneDrive can be used for free and with a subscription, you can access more features.\n\nFor the synchronization of files, there is a desktop version for Windows and Mac.\n\nTo work with other Microsoft products (Word, Excel, PowerPoint) you need a Microsoft account with a subscription for the respective products. There is also a web version, but it does not have all the features of the desktop version.\n\nAdvantages of OneDrive\n\n\n  Integration in Windows\n  Integration in Office 365 (Word, Excel, PowerPoint)\n\n\nNachteile OneDrive\n\n\n  Only available for Windows\n  Web version does not have all the features\n  Only available in Office 365 ⇒ additional costs\n  Each user needs a Windows device with Office 365 subscription\n\n\nComparison\n\n\n  \n    \n      Name                                    \n      Google Drive\n      OneDrive                    \n    \n  \n  \n    \n      Provider                                \n      Google      \n      Microsoft                  \n    \n    \n      Free storage space                      \n      15 GB        \n      5 GB                        \n    \n    \n      Versioning & Recovery                    \n      yes          \n      yes                        \n    \n    \n      Working with Word, Excel, PowerPoint    \n      yes          \n      yes (subscription required)\n    \n    \n      Working with Google Docs, Sheets, Slides\n      yes          \n      no                          \n    \n    \n      Collaboration with others                \n      yes          \n      yes                        \n    \n    \n      Web version                              \n      yes          \n      yes                        \n    \n    \n      Desktop version                          \n      yes          \n      yes                        \n    \n    \n      Desktop version (programs)              \n      no          \n      yes                        \n    \n    \n      Price for 100 GB (year)                  \n      20 CHF      \n      20 CHF                      \n    \n    \n      Offline access                          \n      yes          \n      yes                        \n    \n  \n\n\nConclusion\n\nGoogle Drive and OneDrive have many similarities. Both require an account and can be used for free with limited storage space. On both, you can buy more storage space with a subscription and then have access to additional features. In addition, there are other products for both products to edit different documents.\n\nGoogle Drive is a good cloud storage service that is suitable for collaboration with others. With Google Drive, you can easily work with other Google products. For these products, no subscription is required, and they are web-based or available as an app on mobile devices. Office documents can also be edited with Google Docs, Sheets, Slides.\n\nOneDrive is installed by default on Windows systems and can be used with Office 365. However, a subscription from the user is required for Office 365. There is also a web version, but it does not have all the features like the desktop version.\n\nTherefore, Google Drive is better suited for collaboration with other people. If each user has a Windows / Mac system with an Office 365 subscription, OneDrive is better suited, as the users are better acquainted with Office 365.",
    "tags": [
      "cloud-storage",
      "comparisons"
    ],
    "author": "unknown-author",
    "source": "Coding Crab Blog"
  },
  {
    "title": "Google Docs Tricks",
    "link": "https://blog.chraebsli.dev/guides/google-docs-tricks/",
    "pubDate": "Tue, 07 Mar 2023 09:02:00 +0100",
    "excerpt": "In this post, you will find a collection of Google Docs tricks and tips to make your life easier when using Google Docs.\n\nConvert Microsoft Word to Google Docs\n\nYou can convert Microsoft Word documents to Google Docs. Although you can edit word documents in Google Docs and also collaborate with others, you might ask why you should convert it.\nThe reason is, that there is a possibility when you are using some Google Docs features and editing the document in Microsoft Word, the document will be corrupted. And when you convert it to Google Docs, you can use all the features of Google Docs, including extensions, and you are only able to edit it in Google Docs.\n\nHow to convert it:\n\n\n  Open the document in Google Docs\n  Navigate to File > Save as Google Docs\n  The Google Docs version will be opened in a new tab and saved at the same location\n  Check if the document is working as expected\n  Delete the original document\n\n\nNote: This also works with Excel and PowerPoint documents. (docx, xlsx, pptx)\n\nLinking and Mentioning\n\nAnother great feature is the ability to link and mention all different types of things that are linked to your Google account. This includes:\n\n\n  People/ Contacts\n  Files\n  Calendar events\n  Places\n  Dates\n\n\nMention People\n\nYou can mention people in your document. This can be either a person from your contact list or someone that has access to the document. If you mention someone, you can also give them access to the document.\n\nTo mention someone, you can either type @ and then start typing the name of the person, or you can navigate to Insert > Smart Chips > People.\n\nNote: This also works with Google Sheets\n\nLink documents\n\nYou can link other documents from Google Drive. If you hover over the link, you get a preview of the document, and you can also open it in a new tab.\n\nTo link a document, you can either type @ and then start typing the name of the document, or you can navigate to Insert > Smart Chips > File.\n\nNote: This also works with Google Sheets\n\nInsert dates\n\nWhen you want a date in your document, you mostly type it manually. But you can also create a date chip. When you hover over the date chip, you can create a calendar event and change the format of the date.\n\nTo insert a date, you can either type @ and then start typing the date, or you can navigate to Insert > Smart Chips > Date.\n\nInsert calendar events\n\nIf you have an event in your calendar, you can insert it into your document. You also can add meeting notes and attach the file to this event.\n\nTo insert a calendar event, you can either type @ and then start typing the name of the event, or you can navigate to Insert > Smart Chips > Calendar event.\n\nNote: This also works with Google Sheets\n\nOffline editing\n\nMost of the time, you have an internet connection, and then it’s not a problem to edit your documents. But if you are in a situation where you don’t have an internet connection, it is still possible to edit your documents. And when you are back online, the changes will be synced.\n\nTo edit your document offline, you can navigate to File > Make available offline. You get a notification, that you have to install the Google Docs offline extension. After you have installed it, you can edit your document offline.\n\nNote: This works with Google Docs, Sheets, and Slides\n\nCommunicate with collaborators\n\nWhen you are working on a document with other people, you eventually have to communicate with them. Until now, you probably used discord or WhatsApp or just wrote directly in the document. But there is a better way to communicate with your collaborators.\nYou can chat with them in a sidebar and also create a Google meet call and comment on specific parts of the document and make suggestions.\n\nNote: This works with Google Docs, Sheets, and Slides\n\nChat\n\nWhen you have shared a document with other people, you can click the chat icon in the top right navigation bar. This will open a sidebar where you can chat with your collaborators and also see the comments and suggestions.\n\nCommenting\n\nComments are a great way to communicate with your collaborators. This way you can discuss the document and mention people and reply to them without making the document messy or changing between different windows when using an external chat.\n\nWhen you want to comment on a specific part of the document, you have 3 options after you selected the text:\n\n\n  press Ctrl + Alt + M\n  Click the comment icon on the right side of the document\n  Right-click and select Comment\n\n\nSuggesting edits\n\nSometimes want to change parts of the document. But it’s not always the best solution to just change it. You can suggest edits to the document. This will create a comment with the suggested changes. These changes then can be accepted or rejected. This way, you can discuss the changes with your collaborators and make sure that the changes are correct.\n\nTo suggest edits, you have 2 options:\n\n\n  Change to the Suggesting mode by selecting it in the top right corner of the window\n  Select the text and click the Suggest icon on the right side of the document\n\n\nDocument Outline\n\nWhen you have a long document, it can be hard to navigate through it. With the outline feature, you can see all the headings and subheadings of the document and navigate to them by clicking on them.\n\nEnable the outline by clicking on Show outline in the View menu in the main navigation bar.",
    "tags": [
      "google",
      "guides"
    ],
    "author": "unknown-author",
    "source": "Coding Crab Blog"
  },
  {
    "title": "Add Shared Google Drive Folder/ File to My Drive",
    "link": "https://blog.chraebsli.dev/guides/add-shared-google-drive-folder-to-my-drive/",
    "pubDate": "Tue, 07 Mar 2023 08:26:00 +0100",
    "excerpt": "In this post, you will learn how to add a shared Google Drive folder/ file to your Google Drive.\n\nWhy add a shared folder/ file to your Drive?\n\nIf someone shares a folder/ file with you, you find it in the “Shared with me” section of your Google Drive. And if you have many shared folders or files, it can be difficult to find the one you are looking for.\n\nAlso, if you are using Google Drive for desktop, you will not see them. So if you add the folders and files to your Drive, you can define their location, and you can also open it in Drive for desktop.\n\nHow to add a shared folder/ file to your Drive\n\nMobile\n\n\n  Open the Google Drive app\n  Navigate to the “Shared with me” section\n  Locate the folder or file\n  Click on the three dots on the right side\n  Click on “Add shortcut to Drive”\n  Now can choose the location where you want to link the folder or file\n  As a last step, you can rename the folder or file without changing the original name\n\n\nDesktop\n\n\n  Open Google Drive in your browser\n  Navigate to the “Shared with me” section\n  Locate the folder or file\n  Right-click on the folder or file\n  Click on “Add shortcut to Drive”\n  Choose the location where you want to link the folder or file\n  As a last step, you can rename the folder or file without changing the original name",
    "tags": [
      "google",
      "guides"
    ],
    "author": "unknown-author",
    "source": "Coding Crab Blog"
  },
  {
    "title": "Conventional Commits Explained",
    "link": "https://blog.chraebsli.dev/handbooks/conventional-commits-explained/",
    "pubDate": "Tue, 28 Feb 2023 17:51:00 +0100",
    "excerpt": "In this post, you will learn about Conventional Commits in a simple way and how to use it in your projects.\n\nWhat are Conventional Commits?\n\nThe Conventional Commits specification is a lightweight convention that is used to replace commit messages. It provides some rules for creating a commit history. This makes it easier to write automated tools on top of, like automated change logs. This convention dovetails with SemVer, by describing the features, fixes, and breaking changes made in commit messages.\n\nFormat of the commit message:\n\n1\n2\n3\n4\n5\n<type>[scope][!]: <description>\n\n[body]\n\n[footer]\n\n\nElements\n\nType\n\ntype is required and describes the type of change that this commit is providing. Allowed values are:\n\n\n  fix: A bug fix\n  feat: A new feature\n  docs: Documentation only changes\n  style: Changes that do not affect the meaning of the code (white-space, formatting, missing semicolons, etc.)\n  refactor: A code change that neither fixes a bug nor adds a feature. Like a rename of a variable.\n  test: Adding missing tests or correcting existing tests\n  ci: Changes to our CI configuration files and scripts\n  perf: A code change that improves performance\n  chore: Changes to the build process or auxiliary tools and libraries such as documentation generation\n  revert: Reverts a previous commit\n\n\nScope\n\nscope is optional and describes the affected code. For example, (api), (cli), etc. If there is no scope, the commit impacts the whole project and the parentheses are omitted. If there’s no scope, it means that the commit impacts the entire project.\n\nBreaking Changes\n\n! is optional and is used to indicate a breaking change. This is placed after the scope and before the description. If there is no scope, the ! is placed after the type.\n\nDescription\n\ndescription is required and is a short description of the change. The description is a single line and must be no longer than 100 characters. The description must start with a capital letter and end with a period. The description should be written in the imperative, present tense: “change” not “changed” nor “changes”.\n\nBody\n\nbody is optional and can include a longer description of the change. The body should include the motivation for the change and contrast this with previous behavior. This is to ensure that the git log remains readable and useful.\n\nFooter\n\nfooter is optional and can include information about breaking changes and is also the place to reference GitHub issues that this commit Closes.\n\nExamples\n\nYou can find examples of Conventional Commits here:\n\n\n  https://www.conventionalcommits.org/en/v1.0.0/#examples\n\n\nReference\n\n\n  https://www.conventionalcommits.org/",
    "tags": [
      "version-control",
      "handbooks"
    ],
    "author": "unknown-author",
    "source": "Coding Crab Blog"
  },
  {
    "title": "Semantic Versioning Explained",
    "link": "https://blog.chraebsli.dev/handbooks/semantic-versioning-explained/",
    "pubDate": "Tue, 28 Feb 2023 16:40:00 +0100",
    "excerpt": "In this post, you will learn about Semantic Versioning in a simple way and how to use it in your projects.\n\nWhat is Semantic Versioning?\n\nSemantic Versioning is a set of rules and requirements that dictate how version numbers are assigned and incremented. These rules are based on but not necessarily limited to pre-existing widespread common practices in use in both closed and open-source software.\n\nFormat\n\nSematic Versioning is represented by a string of the format MAJOR.MINOR.PATCH, where:\n\nMAJOR is incremented when incompatible API changes are made. That means that it is not backwards-compatible and will break existing code that uses the old API.\n\nMINOR is incremented when functionality in a backwards-compatible manner is added. That means that it is backwards-compatible and will not break existing code that uses the old API.\n\nPATCH is incremented when backwards-compatible bug fixes are made. That means that it is backwards-compatible and will not break existing code that uses the old API. Other than in the MINOR case, no changes to the API and no new functionality is added.\n\nExample\n\n1.0.0 -> optimization -> 1.0.1 -> bugfix -> 1.0.2 -> non-breaking feature -> 1.1.0 -> breaking feature -> 2.0.0\n\nHere we start with version 1.0.0. We optimize the code, which is a non-breaking change and adds no functionality, so we increment the PATCH version (1.0.1).  Then we fix a bug, which is a non-breaking change, so we increment the PATCH version again (1.0.2). Then we add a non-breaking feature, which adds functionality, so we increment the MINOR version (1.1.0). Finally, we add a breaking feature, which is a breaking change, so we increment the MAJOR version (2.0.0).\n\nInitial Development\n\nBefore version 1.0.0 is released, anything may change at any time. The public API should not be considered stable. In other words, the MAJOR version is 0. After version 1.0.0 is released, the public API should be considered stable.\n\nBackwards Compatibility\n\nBackwards compatibility is defined as follows: if a user of the library is using a version of the library that is older than the current version, and the user upgrades to the current version, the user’s code should still work. If the user’s code does not work, then the user has to upgrade their code to work with the current version.\n\nReference\n\n\n  https://semver.org/",
    "tags": [
      "version-control",
      "handbooks"
    ],
    "author": "unknown-author",
    "source": "Coding Crab Blog"
  }
]